#!/bin/bash

# SPDX-FileCopyrightText: 2023 KOINSLOT, Inc.
#
# SPDX-License-Identifier: GPL-3.0-or-later

# vi: ft=sh

echo "🥝 devkit: compile_commands..."

set -euo pipefail

inputFiles="$(get_apps | xargs -I {} -n 1 echo {}/build/compile_commands.json)"

echo "🥝 devkit: combining [ $(echo $inputFiles | xargs echo) ] into ./compile_commands.json..."

for compilationDatabase in $inputFiles; do
  # restore any rename compilation databases so they can be rebuilt
  if [ -f $compilationDatabase.processed ]; then
    mv $compilationDatabase.processed $compilationDatabase
  fi
done

mkdir -p .devkit
jq -s "flatten" $inputFiles > .devkit/compile_commands.json

for compilationDatabase in $inputFiles; do
  # rename compilation database so it isn't automatically picked up by clangd
  mv $compilationDatabase $compilationDatabase.processed
done

python -m compdb -p .devkit list \
  | sed \
    -e 's/ -fstrict-volatile-bitfields//' \
    -e 's/ -fno-tree-switch-conversion//' \
    -e 's/ -nostartfiles//' \
    -e 's/ -mlongcalls//' \
    -e 's/ -march=rv32imc_zicsr_zifencei//' \
    -e 's/-I\/opt/-isystem\/opt/g' \
    > .devkit/compile_commands.devkit.json

mv .devkit/compile_commands.devkit.json .devkit/compile_commands.json

if [ -n "${LOCAL_IDF_PATH:-}" ] && [ -n "${LOCAL_IDF_TOOLS_PATH:-}" ]; then
  echo "🥝 devkit: building local compile_commands.json file..."
  cp .devkit/compile_commands.json compile_commands.json
  sed -i "s#$IDF_PATH#$LOCAL_IDF_PATH#g" compile_commands.json
  sed -i "s#$IDF_TOOLS_PATH#$LOCAL_IDF_TOOLS_PATH#g" compile_commands.json
fi

echo "🥝 devkit: compile_commands complete."
